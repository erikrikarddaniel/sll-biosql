require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.

describe ProteinGiTaxonsController do
  # This should return the minimal set of attributes required to create a valid
  # ProteinGiTaxon. As you add validations to ProteinGiTaxon, be sure to
  # update the return value of this method accordingly.
  def valid_attributes
    { :taxon_id => 100, :protein_gi => 100 }
  end
  
  # This should return the minimal set of values that should be in the session
  # in order to pass any filters (e.g. authentication) defined in
  # ProteinGiTaxonsController. Be sure to keep this updated too.
  def valid_session
    {}
  end

  describe "GET index" do
    it "assigns all protein_gi_taxons as @protein_gi_taxons" do
      get :index, {}, valid_session
      assigns(:protein_gi_taxons).should eq([])
    end
  end

  describe "GET show" do
    it "assigns the requested protein_gi_taxon as @protein_gi_taxon" do
      protein_gi_taxon = ProteinGiTaxon.create! valid_attributes
      get :show, { :id => protein_gi_taxon.to_param }, valid_session
      assigns(:protein_gi_taxon).should eq(protein_gi_taxon)
    end
  end
end
